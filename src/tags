!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
CUBIC	gendy_sfr.h	/^enum { LINEAR, CUBIC, SPLINE, SINC };$/;"	e	enum:__anon1
FLAT	gendy_sfr.h	/^enum { FLAT, SINE, SQUARE, TRIANGLE, SAWTOOTH };$/;"	e	enum:__anon2
GENDY_MAJ	main.cpp	/^const int GENDY_MAJ = 0;$/;"	v
GENDY_MIN	main.cpp	/^const int GENDY_MIN = 0;$/;"	v
GENDY_REV	main.cpp	/^const int GENDY_REV = 1;$/;"	v
LINEAR	gendy_sfr.h	/^enum { LINEAR, CUBIC, SPLINE, SINC };$/;"	e	enum:__anon1
LOG_DEBUG	gendy_sfr.h	14;"	d
LOG_ERROR	gendy_sfr.h	12;"	d
LOG_INFO	gendy_sfr.h	13;"	d
LOG_LEVEL	gendy_sfr.h	16;"	d
LOG_NONE	gendy_sfr.h	11;"	d
SAWTOOTH	gendy_sfr.h	/^enum { FLAT, SINE, SQUARE, TRIANGLE, SAWTOOTH };$/;"	e	enum:__anon2
SINC	gendy_sfr.h	/^enum { LINEAR, CUBIC, SPLINE, SINC };$/;"	e	enum:__anon1
SINE	gendy_sfr.h	/^enum { FLAT, SINE, SQUARE, TRIANGLE, SAWTOOTH };$/;"	e	enum:__anon2
SPLINE	gendy_sfr.h	/^enum { LINEAR, CUBIC, SPLINE, SINC };$/;"	e	enum:__anon1
SQUARE	gendy_sfr.h	/^enum { FLAT, SINE, SQUARE, TRIANGLE, SAWTOOTH };$/;"	e	enum:__anon2
TRIANGLE	gendy_sfr.h	/^enum { FLAT, SINE, SQUARE, TRIANGLE, SAWTOOTH };$/;"	e	enum:__anon2
WAVE_BUFFER_INIT_SIZE	gendy_sfr.cpp	/^const int WAVE_BUFFER_INIT_SIZE = 441000;$/;"	v
add_breakpoint	gendy_sfr.cpp	/^void gendy_waveform::add_breakpoint() {$/;"	f	class:gendy_waveform
amplitude	gendy_sfr.h	/^	float amplitude;$/;"	m	class:breakpoint
amplitude_pull	gendy_sfr.h	/^	float duration_pull, amplitude_pull;$/;"	m	class:gendy_waveform
average_wavelength	gendy_sfr.h	/^	unsigned int average_wavelength;$/;"	m	class:gendy_waveform
breakpoint	gendy_sfr.cpp	/^breakpoint::breakpoint() {$/;"	f	class:breakpoint
breakpoint	gendy_sfr.cpp	/^breakpoint::breakpoint(unsigned int duration, float amplitude) {$/;"	f	class:breakpoint
breakpoint	gendy_sfr.cpp	/^breakpoint::breakpoint(unsigned int duration, float amplitude,$/;"	f	class:breakpoint
breakpoint	gendy_sfr.h	/^class breakpoint$/;"	c
breakpoint_list	gendy_sfr.h	/^	std::list<breakpoint> breakpoint_list;$/;"	m	class:gendy_waveform
center_amp	gendy_sfr.h	/^	float center_amp;$/;"	m	class:breakpoint
center_breakpoints	gendy_sfr.cpp	/^void gendy_waveform::center_breakpoints() {$/;"	f	class:gendy_waveform
center_dur	gendy_sfr.h	/^	unsigned int center_dur;$/;"	m	class:breakpoint
class_setup	main.cpp	/^void gendy::class_setup(t_classid thisclass) {$/;"	f	class:gendy
constrain_endpoints	gendy_sfr.h	/^	bool constrain_endpoints;$/;"	m	class:gendy_waveform
copy_index	gendy_sfr.h	/^	unsigned int copy_index;$/;"	m	class:gendy_waveform
current_wavelength	gendy_sfr.h	/^	unsigned int current_wavelength;$/;"	m	class:gendy_waveform
debug	gendy_sfr.h	/^	bool debug;$/;"	m	class:gendy_waveform
debug	main.cpp	/^		static bool debug;$/;"	m	class:gendy	file:
debug	main.cpp	/^bool gendy::debug = true;$/;"	m	class:gendy	file:
display	gendy_sfr.h	/^	bool display;$/;"	m	class:gendy_waveform
display	main.cpp	/^		bool display;$/;"	m	class:gendy	file:
display_buf	gendy_sfr.h	/^	flext::buffer *display_buf;$/;"	m	class:gendy_waveform
display_buf	main.cpp	/^		buffer *display_buf;$/;"	m	class:gendy	file:
display_bufname	main.cpp	/^		t_symbol *display_bufname;$/;"	m	class:gendy	file:
display_rate	gendy_sfr.h	/^	int display_rate;$/;"	m	class:gendy_waveform
display_rate	main.cpp	/^		int display_rate;$/;"	m	class:gendy	file:
display_toggle	gendy_sfr.cpp	/^void gendy_waveform::display_toggle() {$/;"	f	class:gendy_waveform
display_toggle	gendy_sfr.cpp	/^void gendy_waveform::display_toggle(bool state) {$/;"	f	class:gendy_waveform
display_waveform	gendy_sfr.cpp	/^void gendy_waveform::display_waveform() {$/;"	f	class:gendy_waveform
duration	gendy_sfr.h	/^	unsigned int duration;$/;"	m	class:breakpoint
duration_pull	gendy_sfr.h	/^	float duration_pull, amplitude_pull;$/;"	m	class:gendy_waveform
elastic_move	gendy_sfr.cpp	/^void breakpoint::elastic_move(float h_step, float v_step, $/;"	f	class:breakpoint
gauss	gendy_sfr.cpp	/^double gauss() {$/;"	f
gendy	main.cpp	/^class gendy:  public flext_dsp {$/;"	c	file:
gendy	main.cpp	/^gendy::gendy() {$/;"	f	class:gendy
gendy_count	main.cpp	/^		static unsigned int gendy_count;$/;"	m	class:gendy	file:
gendy_count	main.cpp	/^unsigned int gendy::gendy_count = 0;$/;"	m	class:gendy	file:
gendy_waveform	gendy_sfr.cpp	/^gendy_waveform::gendy_waveform() {$/;"	f	class:gendy_waveform
gendy_waveform	gendy_sfr.h	/^class gendy_waveform$/;"	c
generate_from_breakpoints	gendy_sfr.cpp	/^void gendy_waveform::generate_from_breakpoints() {$/;"	f	class:gendy_waveform
get_amplitude	gendy_sfr.cpp	/^float breakpoint::get_amplitude() {$/;"	f	class:breakpoint
get_center_amplitude	gendy_sfr.cpp	/^float breakpoint::get_center_amplitude() {$/;"	f	class:breakpoint
get_center_duration	gendy_sfr.cpp	/^unsigned int breakpoint::get_center_duration() {$/;"	f	class:breakpoint
get_duration	gendy_sfr.cpp	/^unsigned int breakpoint::get_duration() {$/;"	f	class:breakpoint
get_wave_data	gendy_sfr.cpp	/^unsigned int gendy_waveform::get_wave_data(float *buffer, unsigned int n) {$/;"	f	class:gendy_waveform
id	main.cpp	/^		unsigned int id;$/;"	m	class:gendy	file:
interpolation_type	gendy_sfr.h	/^	unsigned int interpolation_type;$/;"	m	class:gendy_waveform
m_signal	main.cpp	/^void gendy::m_signal(int n, float *const *in, float *const *out) {$/;"	f	class:gendy
max_duration	gendy_sfr.h	/^	unsigned int max_duration;$/;"	m	class:breakpoint
move_breakpoints	gendy_sfr.cpp	/^void gendy_waveform::move_breakpoints() {$/;"	f	class:gendy_waveform
next_first	gendy_sfr.h	/^	breakpoint next_first;$/;"	m	class:gendy_waveform
print_log	gendy_sfr.cpp	/^extern void print_log(const char *msg, float arg1, int level){$/;"	f
print_log	gendy_sfr.cpp	/^extern void print_log(const char *msg, int arg1, int level){$/;"	f
print_log	gendy_sfr.cpp	/^extern void print_log(const char *msg, int level){$/;"	f
print_log	gendy_sfr.cpp	/^extern void print_log(const char *msg, unsigned int arg1, int level){$/;"	f
randf	gendy_sfr.cpp	/^double randf() {$/;"	f
remove_breakpoint	gendy_sfr.cpp	/^void gendy_waveform::remove_breakpoint() {$/;"	f	class:gendy_waveform
reset_breakpoints	gendy_sfr.cpp	/^void gendy_waveform::reset_breakpoints() {$/;"	f	class:gendy_waveform
round	gendy_sfr.cpp	/^int round(float num) {$/;"	f
set_amplitude	gendy_sfr.cpp	/^void breakpoint::set_amplitude(float new_amplitude) {$/;"	f	class:breakpoint
set_amplitude_pull	gendy_sfr.cpp	/^void gendy_waveform::set_amplitude_pull(float new_pull) {$/;"	f	class:gendy_waveform
set_avg_wavelength	gendy_sfr.cpp	/^void gendy_waveform::set_avg_wavelength(unsigned int new_wavelength) {$/;"	f	class:gendy_waveform
set_center	gendy_sfr.cpp	/^void breakpoint::set_center(unsigned int new_duration, float new_amplitude) {$/;"	f	class:breakpoint
set_center_amplitude	gendy_sfr.cpp	/^void breakpoint::set_center_amplitude(float new_amplitude) {$/;"	f	class:breakpoint
set_center_duration	gendy_sfr.cpp	/^void breakpoint::set_center_duration(unsigned int new_duration) {$/;"	f	class:breakpoint
set_constrain_endpoints	gendy_sfr.cpp	/^void gendy_waveform::set_constrain_endpoints(bool constrain) {$/;"	f	class:gendy_waveform
set_debug	main.cpp	/^void gendy::set_debug(int new_debug) {$/;"	f	class:gendy
set_display_buffer	gendy_sfr.cpp	/^void gendy_waveform::set_display_buffer(flext::buffer *buf) {$/;"	f	class:gendy_waveform
set_display_rate	gendy_sfr.cpp	/^void gendy_waveform::set_display_rate(int rate) {$/;"	f	class:gendy_waveform
set_duration	gendy_sfr.cpp	/^void breakpoint::set_duration(unsigned int new_duration) {$/;"	f	class:breakpoint
set_duration_pull	gendy_sfr.cpp	/^void gendy_waveform::set_duration_pull(float new_pull) {$/;"	f	class:gendy_waveform
set_frequency	main.cpp	/^void gendy::set_frequency(float new_freq) {$/;"	f	class:gendy
set_h_pull	main.cpp	/^void gendy::set_h_pull(float new_pull) {$/;"	f	class:gendy
set_h_step	main.cpp	/^void gendy::set_h_step(float new_stepsize) {$/;"	f	class:gendy
set_interpolation	gendy_sfr.cpp	/^void gendy_waveform::set_interpolation(int new_interpolation) {$/;"	f	class:gendy_waveform
set_interpolation	main.cpp	/^void gendy::set_interpolation(int new_interpolation) {$/;"	f	class:gendy
set_interpolation_cubic	main.cpp	/^void gendy::set_interpolation_cubic() {$/;"	f	class:gendy
set_interpolation_lin	main.cpp	/^void gendy::set_interpolation_lin() {$/;"	f	class:gendy
set_interpolation_sinc	main.cpp	/^void gendy::set_interpolation_sinc() {$/;"	f	class:gendy
set_interpolation_spline	main.cpp	/^void gendy::set_interpolation_spline() {$/;"	f	class:gendy
set_max_duration	gendy_sfr.cpp	/^void breakpoint::set_max_duration(unsigned int new_max) {$/;"	f	class:breakpoint
set_num_breakpoints	gendy_sfr.cpp	/^void gendy_waveform::set_num_breakpoints(unsigned int new_size) {$/;"	f	class:gendy_waveform
set_num_breakpoints	main.cpp	/^void gendy::set_num_breakpoints(float num_breakpoints) {$/;"	f	class:gendy
set_outbuf	main.cpp	/^void gendy::set_outbuf(short argc, t_atom *argv) {$/;"	f	class:gendy
set_position	gendy_sfr.cpp	/^void breakpoint::set_position(unsigned int new_duration, float new_amplitude) {$/;"	f	class:breakpoint
set_step_height	gendy_sfr.cpp	/^void gendy_waveform::set_step_height(float new_height) {$/;"	f	class:gendy_waveform
set_step_width	gendy_sfr.cpp	/^void gendy_waveform::set_step_width(float new_width) {$/;"	f	class:gendy_waveform
set_v_pull	main.cpp	/^void gendy::set_v_pull(float new_pull) {$/;"	f	class:gendy
set_v_step	main.cpp	/^void gendy::set_v_step(float new_stepsize) {$/;"	f	class:gendy
set_waveshape	gendy_sfr.cpp	/^void gendy_waveform::set_waveshape(unsigned int new_waveshape) {$/;"	f	class:gendy_waveform
step_height	gendy_sfr.h	/^	float step_width, step_height;$/;"	m	class:gendy_waveform
step_width	gendy_sfr.h	/^	float step_width, step_height;$/;"	m	class:gendy_waveform
wave_buffer_size	gendy_sfr.h	/^	unsigned int wave_buffer_size;$/;"	m	class:gendy_waveform
wave_samples	gendy_sfr.h	/^	float *wave_samples;$/;"	m	class:gendy_waveform
waveform	main.cpp	/^		gendy_waveform waveform;$/;"	m	class:gendy	file:
waveshape	gendy_sfr.h	/^	unsigned int waveshape;$/;"	m	class:gendy_waveform
~gendy	main.cpp	/^gendy::~gendy() {$/;"	f	class:gendy
~gendy_waveform	gendy_sfr.cpp	/^gendy_waveform::~gendy_waveform() {$/;"	f	class:gendy_waveform
